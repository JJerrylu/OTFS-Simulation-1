clc, clear all
M = 32;
CP_length = 8;
N = 32;
MN = M*N;
frame_length = MN+CP_length*N;
delta_f = 15e3;            % 15kHz
T = 1/delta_f;             % Block Duration
fc = 4e9;                  % 4GHz
%delay_tap = [0, 1, 2, 3, 4, 5, 8, 13, 19];
delay_tap = [0, 1, 2, 3, 4, 5, 6, 7, 8];
% int_delay_inx = round(delay_tap);
% frac_delay_inx = delay_tap - int_delay_inx;
tap = length(delay_tap);

%% Delay and channel coefficient
delay = delay_tap/(M*delta_f);
delay_pow_prof = [0, -1.5, -1.4, -3.6, -0.6, -9.1, -7.0, -12.0, -16.9];
lin_pow_prof = 10.^(delay_pow_prof/10);
lin_pow_prof = lin_pow_prof/sum(lin_pow_prof);
chan_coef = sqrt(lin_pow_prof).*(sqrt(1/2) * (randn(1,tap)+1i*randn(1,tap)));

%% Doppler shift
max_speed = 500;           % 500 km/h
v = max_speed*(1000/3600);
max_doppler = (v*fc)/(299792458);
doppler = max_doppler*cos(2*pi*rand(1,tap));
doppler_inx = doppler*(N*T); % Doppler taps using Jake's spectrum
%doppler_inx = [1, 2, -4, -3, 5, 6, -10, 13, -14];
%doppler = doppler_inx/(N*T);
int_doppler_inx = round(doppler_inx);                  % Integer Doppler
frac_doppler_inx = doppler_inx-int_doppler_inx;        % Fractional Doppler

X_DD  = zeros(M, N);
X_DD(M/2, N/2) = 1; 
X_DD_vec = reshape(X_DD, MN, 1);
S   = ifft(X_DD, N)/sqrt(N);
S_vec   = reshape(S, MN, 1);
H   = zeros(MN, MN);

doppler_mtx = zeros(M,M);

for n = 1:N
    H_n = zeros(M, M);
    for p = 1:tap 
        delay_mtx = eye(M);
        for i = 1:M
            doppler_mtx(i,i) = exp(-1i*2*pi*doppler_inx(p)/MN*(M*(n-1)- delay_tap(p)+i-1));
            delay_mtx(:, i) = circshift(delay_mtx(:, i), delay_tap(p));
        end
        H_n = H_n + chan_coef(p)*doppler_mtx*delay_mtx;
    end
    
        H((n-1)*M+1:n*M, (n-1)*M+1:n*M) = H_n;
end

F_N    = fft(eye(N))/sqrt(N);
%F_N_H  = ifft(eye(N))/sqrt(N);
F_NM   = kron(F_N, eye(M));
%F_NM_H = kron(F_N_H, eye(M));
F_NM_H = F_NM';
H_eq   = F_NM * H * F_NM_H;
Y_DD_vec   = H_eq * X_DD_vec ;
Y_DD = reshape(Y_DD_vec, M , N);
channel_envelope = abs(Y_DD);
%% Plot
figure; bar3(abs(X_DD)); title('DD domain transmitted pilot X\_DD (abs)'); xlabel('doppler'); ylabel('delay');
figure; bar3(abs(H_n));  title('DD domain channel matrix of each OFDM symbol  H\_n (abs)'); xlabel('doppler'); ylabel('delay');

figure;
imagesc(0:MN-1, 0:MN-1, abs(H));
set(gca,'XDir','normal'); 
title('DD Channel Magnitude');
colormap(jet); colorbar;

figure;
imagesc(0:MN-1, 0:MN-1, abs(H_eq));
set(gca,'XDir','normal'); 
title('DD Equivalent Channel Magnitude');
colormap(jet); colorbar;

figure; bar3(abs(Y_DD)); title('DD domain pilot response H\_dd (abs)'); xlabel('doppler'); ylabel('delay');
